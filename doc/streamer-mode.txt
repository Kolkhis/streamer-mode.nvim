==============================================================================
				STREAMER MODE 
							   *streamer-mode.nvim*


by Kolkhis           


Intro 
 
    streamer-mode.nvim is plugin that will hide your environment variables 
 and sensitive Git config information.


==============================================================================
				    SETUP
							*streamer-mode.setup()*
								    *sm.setup*
streamer-mode.setup({opts})                         
    Setup function to be run by user. Configures the defaults, pickers and
    extensions of telescope. 

    Usage: ~
    >
    Defaults can be used by calling like:
    
        require('streamer-mode').setup({ preset = true })

    To set up a custom config:
    require('streamer-mode').setup{
	paths = {
        -- name = '*/path/*',
        -- Default:
    venv = '*/venv/*',
    virtualenv = '*/virtualenv/*',
    dotenv = '*/.env',
    config = '*/.config/*',
    aliases = '*/.bash_aliases',
    dotfiles = '*/dotfiles/*',
    powershell = '*.ps1',
    gitconfig = '*/.gitconfig',
    configini = '*/*.ini',
    yaml_secrets = '*/*.yaml',
	-- Use any name, only the paths will be used.
      },


      level = 'secure', -- | 'edit' | 'soft' (see more info below)

      default_state = 'off',  -- | 'on' : Whether or not streamer mode turns
                             --           on when nvim is launched.

      conceal_char = '*'  -- Default. This is what will be displayed instead
	                  -- of your secrets.

    })
<

The `paths` listed in the example are ON by default. Disable them by passing
their names to `exclude` during setup.

Level will determine if, and how, the hidden text will be displayed in
your buffer. See |stremer-mode.level|

==============================================================================
				    LEVELS
							 *streamer-mode.levels*
								    *sm.levels*
• Levels:

							*sm.secure* | *secure*
    • `'secure'` will disable the text becoming visible until
      the `level` changes. (see |streamer-mode.command|)
      You can also type out new exports (or other environment 
      variables) and the text will not be shown.
      Like sudo password input.

							    *sm.edit* | *edit*
    • `'edit'` will enable the text to become visible when the 
       cursor goes into insert mode on the same line.

							    *sm.soft* | *soft*
    • `'soft'` means the text will become visible when the cursor is 
      on the same line.



==============================================================================
				   COMMANDS
						       *streamer-mode.command*
								  *sm.command*


	     There are five commands available for Streamer Mode.
		 Each command has an alias for easier typing.
	 The new mode will go into effect once the command is called.


						       *:StreamerMode* | *:SM*

    • `:StreamerMode` (or `:SM`) - Starts Streamer Mode.



						 *:StreamerModeOff* | *:SMoff*

    • `:StreamerModeOff` (or `:SMoff`) - Shuts off Streamer Mode.



					   *:StreamerModeSecure* | *:SMsecure*

    • `:StreamerModeSecure` 
      (or `:SMsecure`) - Starts Streamer Mode in `'secure'` mode.



					       *:StreamerModeEdit* | *:SMedit*

    • `:StreamerModeEdit` (or `:SMedit`) - Starts Streamer Mode in `'edit'` mode.




					       *:StreamerModeSoft* | *:SMsoft*

    • `:StreamerModeSoft` (or `:SMsoft`) - Starts Streamer Mode in `'soft'` mode.




==============================================================================
			      CONCEAL CHARACTER		


					    *conceal_char* | *sm.conceal_char*

	 This is the character that will show up instead of your secrets.
	 You can set a custom conceal character by passing the `conceal_char`
	 argument to |.setup()|



==============================================================================
				DEFAULT STATE


					  *default_state* | *sm.default_state*

	This option can be set to either `'on'` or `'off'`, passed into the
	|setup()| function. 

	`'on'` will start Streamer Mode when Neovim is launched.

	`'off'` will not launch Streamer Mode when Neovim is launched, if this
	option is set, you need to run `:SM` or `:SM(level)` to start 
	Stremer Mode.



==============================================================================
				    PATHS

							  *paths* | *sm.paths*

	Passed into |setup()|, these are the paths that Streamer Mode will
	be applied to. 
	These can be filepaths, filetypes, or just files, in the format:

	`paths = { bashrc = '*/.bashrc', config = '~/.config/*' }`

	Supports the `'*'` wildcard.
	It is possible to set `paths = { all = '*' }` to enable 
	Streamer Mode in all files.

	For example if I open `~/.bashrc`, and I haven't specified
	the path `home = '~/'` or `bash = '*/.bashrc'` in `paths`, then
	Streamer Mode will not hide any data in that file.



vim:tw=78:ts=8:noet:ft=help:norl:
